{
  "active": true,
  "connections": {
    "Config": {
      "main": [
        [
          {
            "node": "Get Workflows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Return": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Edit existing file",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Create new file",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get File": {
      "main": [
        [
          {
            "node": "Merge Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a file": {
      "main": [
        [
          {
            "node": "Is File too large?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Items": {
      "main": [
        [
          {
            "node": "isDiffOrNew",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "isDiffOrNew": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Workflows": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create new file": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Completed Notification",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get a file",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge Items",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Starting Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Starting Message": {
      "main": [
        [
          {
            "node": "Config",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit existing file": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is File too large?": {
      "main": [
        [
          {
            "node": "Get File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "Starting Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Completed Notification": {
      "main": [
        [
          {
            "node": "Call 'Success Logger'",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-10-03T04:33:47.764Z",
  "id": "GjMSHp010dYvNLHd",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Backup daily Trilium Notes changes To Github",
  "nodes": [
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8d513345-6484-431f-afb7-7cf045c90f4f",
              "name": "Done",
              "type": "boolean",
              "value": true
            }
          ]
        },
        "options": {}
      },
      "id": "c0239482-490f-4438-9a6c-ed8e6e6c50b9",
      "name": "Return",
      "type": "n8n-nodes-base.set",
      "position": [
        1872,
        224
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {},
      "id": "34854c7b-f43f-4b42-ba9e-f8238c1bf528",
      "name": "Merge Items",
      "type": "n8n-nodes-base.merge",
      "position": [
        992,
        32
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "jsCode": "const orderJsonKeys = (jsonObj) => {\n  const ordered = {};\n  Object.keys(jsonObj).sort().forEach(key => {\n    ordered[key] = jsonObj[key];\n  });\n  return ordered;\n}\n\n// Check if file returned with content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Decode base64 content and parse JSON\n  const origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64').toString());\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n// No file returned / new workflow\n} else if (Object.keys($input.all()[0].json).includes(\"data\")) {\n  const origWorkflow = JSON.parse($input.all()[0].json.data);\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n\n} else {\n  // Order JSON object\n  const n8nWorkflow = $input.all()[1].json;\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n  \n  // Proper formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return items\nreturn $input.all();\n"
      },
      "id": "ceca58ef-22be-438b-9dca-bb79a5e2cbb6",
      "name": "isDiffOrNew",
      "type": "n8n-nodes-base.code",
      "position": [
        1200,
        32
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "file",
        "owner": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Config').item.json.repo_owner }}"
        },
        "repository": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Config').item.json.repo_name }}"
        },
        "filePath": "={{ $('Config').item.json.repo_path }}/{{$('Loop Over Items').item.json.name}}.json",
        "fileContent": "={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}",
        "commitMessage": "={{$('Loop Over Items').item.json.name}} ({{$json.github_status}})"
      },
      "id": "053a6e23-b788-4bca-a511-76d91c501700",
      "name": "Create new file",
      "type": "n8n-nodes-base.github",
      "position": [
        1648,
        32
      ],
      "webhookId": "4b4eaa7f-ba1e-4743-a7b2-62c71bef1d0a",
      "typeVersion": 1,
      "credentials": {
        "githubOAuth2Api": {
          "id": "C4zUH1OwuLB35bp4",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "file",
        "operation": "edit",
        "owner": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Config').item.json.repo_owner }}"
        },
        "repository": {
          "__rl": true,
          "value": "={{ $('Config').item.json.repo_name }}",
          "mode": "name"
        },
        "filePath": "={{ $('Config').item.json.repo_path }}/{{$('Loop Over Items').item.json.name}}.json",
        "fileContent": "={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}",
        "commitMessage": "={{$('Loop Over Items').item.json.name}} ({{$json.github_status}})"
      },
      "id": "74df5e89-f402-41f9-b841-cb74aebea357",
      "name": "Edit existing file",
      "type": "n8n-nodes-base.github",
      "position": [
        1648,
        -176
      ],
      "webhookId": "f143256d-2a69-4cd4-a9d1-fbd2257cf2c3",
      "typeVersion": 1,
      "credentials": {
        "githubOAuth2Api": {
          "id": "C4zUH1OwuLB35bp4",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "bb64ed2c-5193-4b8f-a9e8-55cb83ea244c",
              "operator": {
                "type": "dateTime",
                "operation": "afterOrEquals"
              },
              "leftValue": "={{ $json.updatedAt }}",
              "rightValue": "={{ $now.minus(1, 'days') }}"
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "id": "9e40b3e1-54e5-4bee-9476-8250c2670cc8",
      "name": "Filter",
      "type": "n8n-nodes-base.filter",
      "position": [
        -128,
        32
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "content": "# How it works \nThis workflow will backup all instance workflows to GitHub every 24 hours.\n\nThe files are saved into folders using `repo_path` for the directory path and `ID.json` for the filename.\nThe Repo Owner, Repo Name and Main folder are set using the `Config` node in the subworkflow. \n\nThe workflow runs calls itself to help reduce memory usage, Once the workflow has completed it will send an optional notification to Slack.\n\nPlease check out my other items on [gumroad](https://boanse.gumroad.com/?section=k_Sn6LcT_dzJFnp5jmsM5A%3D%3D)\nYou might also like something else☺️",
        "height": 340,
        "width": 400
      },
      "id": "2f839724-0847-44a6-8465-7895dd1b175c",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1648,
        -64
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "6655f56f-b447-43eb-84a2-be8b71524af7",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{$json.github_status}}",
                    "rightValue": "different"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "Different"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "fd0fcdea-e8c0-42be-ba51-5cd2b71ed247",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{$json.github_status}}",
                    "rightValue": "new"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "New"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "ca3b1c68-d756-4de5-b69b-147526e19e35",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{$json.github_status}}",
                    "rightValue": "same"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "Same"
            }
          ]
        },
        "options": {}
      },
      "id": "56d17d4a-f2a9-4060-aa9f-9ac0c0fb34fb",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "position": [
        1424,
        32
      ],
      "typeVersion": 3.2
    },
    {
      "parameters": {
        "filters": {},
        "requestOptions": {}
      },
      "id": "83b440f4-1289-469b-b927-8900349c0818",
      "name": "Get Workflows",
      "type": "n8n-nodes-base.n8n",
      "position": [
        -336,
        32
      ],
      "typeVersion": 1,
      "credentials": {
        "n8nApi": {
          "id": "lbAvT1ePxYXR0pr9",
          "name": "n8n account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "03f51f9c-4681-4423-91d2-d32f4c18d6bc",
              "name": "repo_owner",
              "type": "string",
              "value": "devenkhatri"
            },
            {
              "id": "0c9b521a-b698-4b43-9eb0-bbf744760158",
              "name": "repo_name",
              "type": "string",
              "value": "dt-n8n-workflow-backups"
            },
            {
              "id": "91627e70-a71a-4be0-a6f6-b04d5c8469d8",
              "name": "repo_path",
              "type": "string",
              "value": "main-vps-n8n-backups"
            },
            {
              "id": "983a2c87-9d69-4d64-ab88-ec1b1117c6e6",
              "name": "sub_path",
              "type": "string",
              "value": ""
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "e1cf4f5d-e005-4e33-8c8e-b3335a487068",
      "name": "Config",
      "type": "n8n-nodes-base.set",
      "position": [
        -560,
        32
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 2
            }
          ]
        }
      },
      "id": "792f9026-be89-45ab-a8da-653e58be5b2b",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        -1008,
        32
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Config').item.json.repo_owner }}"
        },
        "repository": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Config').item.json.repo_name }}"
        },
        "filePath": "={{ $('Config').item.json.repo_path }}/{{$('Loop Over Items').item.json.name}}.json",
        "asBinaryProperty": false,
        "additionalParameters": {}
      },
      "id": "d8a34b45-5427-42a4-aae9-6b8ef54f5592",
      "name": "Get a file",
      "type": "n8n-nodes-base.github",
      "position": [
        432,
        -32
      ],
      "webhookId": "f4d30d2c-4e6d-4abb-9d73-e03097a315f1",
      "typeVersion": 1.1,
      "alwaysOutputData": true,
      "credentials": {
        "githubOAuth2Api": {
          "id": "C4zUH1OwuLB35bp4",
          "name": "GitHub account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "628f6e8f-d817-4c53-89ec-b1acbb3dfef8",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              },
              "leftValue": "={{ $json.content }}",
              "rightValue": ""
            },
            {
              "id": "63fc68bb-63d0-40a8-92e4-2a62b5a71812",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              },
              "leftValue": "={{ $json.error }}",
              "rightValue": ""
            }
          ]
        },
        "options": {}
      },
      "id": "2db14820-fdb4-4a21-8f01-18a1bb84b1f8",
      "name": "Is File too large?",
      "type": "n8n-nodes-base.if",
      "position": [
        576,
        -48
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "url": "={{ $json.download_url }}",
        "options": {}
      },
      "id": "e1bb8617-15ad-494b-93ba-6c7795806b53",
      "name": "Get File",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        768,
        -112
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C09JX12JJP2",
          "mode": "list",
          "cachedResultName": "n8n-notifications"
        },
        "text": "=:information_source:  Starting 'Backup daily n8n Workflows changes To Github' Workflow at {{ $now }} [{{ $execution.id }}]",
        "otherOptions": {
          "includeLinkToWorkflow": true
        }
      },
      "id": "7bfaa13e-19f6-44f0-afa5-87c4e98c79a1",
      "name": "Starting Message",
      "type": "n8n-nodes-base.slack",
      "position": [
        -784,
        32
      ],
      "webhookId": "b8b9f2ca-6633-4cec-876b-3e70bd25d61f",
      "typeVersion": 2.2,
      "credentials": {
        "slackOAuth2Api": {
          "id": "SConh1gN2bh0Ijo9",
          "name": "Slack account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C09JX12JJP2",
          "mode": "list",
          "cachedResultName": "n8n-notifications"
        },
        "text": "=✅ 'Backup daily n8n Workflows changes To Github' workflow has completed at {{ $now }}  - {{ $('Get Workflows').all().length }} workflows have been processed.",
        "otherOptions": {}
      },
      "id": "f4dcb109-c407-4a72-a955-38d3c36bb9fa",
      "name": "Completed Notification",
      "type": "n8n-nodes-base.slack",
      "position": [
        304,
        -432
      ],
      "webhookId": "e7b949f3-d644-44ae-89d9-7087eb2eae45",
      "executeOnce": true,
      "typeVersion": 2.2,
      "credentials": {
        "slackOAuth2Api": {
          "id": "SConh1gN2bh0Ijo9",
          "name": "Slack account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "f4c1a53a-7120-4d5d-a4a4-98c721f0f2f4",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        112,
        32
      ],
      "typeVersion": 3
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -1024,
        -208
      ],
      "id": "0bdbb878-908d-4fb0-b12d-65c1e718df0c",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "url": "https://notes.devengoratela.in/etapi/app-info",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -736,
        -160
      ],
      "id": "22bfb04d-6d4d-47c5-84ea-e85081ce086a",
      "name": "HTTP Request",
      "credentials": {
        "httpBearerAuth": {
          "id": "7ivBUm4WkdPCWKRh",
          "name": "Trilium Notes Bearer Auth account"
        }
      }
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "cxBhhmkbCV2bIKWN",
          "mode": "list",
          "cachedResultUrl": "/workflow/cxBhhmkbCV2bIKWN",
          "cachedResultName": "Success Logger"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "Completion Message": "=✅ 'Backup daily n8n Workflows changes To Github' workflow has completed at {{ $now }}  - {{ $('Get Workflows').all().length }} workflows have been processed.",
            "Workflow Name": "={{ $workflow.name }}",
            "Workflow ID": "={{ $workflow.id }}",
            "Execution ID": "={{ $execution.id }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Workflow Name",
              "displayName": "Workflow Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "Completion Message",
              "displayName": "Completion Message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "Workflow ID",
              "displayName": "Workflow ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "Execution ID",
              "displayName": "Execution ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.3,
      "position": [
        512,
        -432
      ],
      "id": "ca49caad-b04f-44c2-9bc0-48f5db117b6c",
      "name": "Call 'Success Logger'"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1",
    "timezone": "Asia/Kolkata",
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "WftHi0Te0JlKqc6n"
  },
  "shared": [
    {
      "createdAt": "2025-10-03T04:33:47.787Z",
      "updatedAt": "2025-10-03T04:33:47.787Z",
      "role": "workflow:owner",
      "workflowId": "GjMSHp010dYvNLHd",
      "projectId": "aWyvbmsnIGDehq9r"
    }
  ],
  "staticData": {
    "node:Schedule Trigger": {
      "recurrenceRules": []
    }
  },
  "tags": [
    {
      "createdAt": "2025-10-03T04:34:29.974Z",
      "updatedAt": "2025-10-03T04:34:29.974Z",
      "id": "SQ5HNyxvZuyRxUaa",
      "name": "Notes"
    },
    {
      "createdAt": "2025-10-01T05:17:03.484Z",
      "updatedAt": "2025-10-01T05:17:03.484Z",
      "id": "YfZi53gl026aEXFg",
      "name": "Github"
    },
    {
      "createdAt": "2025-10-01T05:17:08.086Z",
      "updatedAt": "2025-10-01T05:17:08.086Z",
      "id": "kagFIvwd0PCyCKqF",
      "name": "n8n"
    },
    {
      "createdAt": "2025-09-29T05:19:40.477Z",
      "updatedAt": "2025-09-29T05:19:40.477Z",
      "id": "rvS6YFEv4tnJccXU",
      "name": "Slack"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-10-03T05:32:23.000Z",
  "versionId": "7ec27934-ec2d-4608-9e00-ae161819e574"
}