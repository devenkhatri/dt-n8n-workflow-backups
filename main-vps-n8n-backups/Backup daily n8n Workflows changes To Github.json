{
  "active": true,
  "connections": {
    "Config": {
      "main": [
        [
          {
            "node": "Get Workflows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Return": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Edit existing file",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Create new file",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get File": {
      "main": [
        [
          {
            "node": "Merge Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a file": {
      "main": [
        [
          {
            "node": "Is File too large?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Items": {
      "main": [
        [
          {
            "node": "isDiffOrNew",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "isDiffOrNew": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Workflows": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create new file": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Completed Notification",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get a file",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge Items",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Starting Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Starting Message": {
      "main": [
        [
          {
            "node": "Config",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit existing file": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is File too large?": {
      "main": [
        [
          {
            "node": "Get File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "Starting Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Completed Notification": {
      "main": [
        [
          {
            "node": "Append row in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-10-01T05:41:25.942Z",
  "id": "VL204MyLfbfQpgQS",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Backup daily n8n Workflows changes To Github",
  "nodes": [
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8d513345-6484-431f-afb7-7cf045c90f4f",
              "name": "Done",
              "type": "boolean",
              "value": true
            }
          ]
        },
        "options": {}
      },
      "id": "aad1f6bb-cdb3-4ba1-9bf4-b189aac9ed84",
      "name": "Return",
      "type": "n8n-nodes-base.set",
      "position": [
        1872,
        224
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {},
      "id": "5d83d4bf-0545-4073-bad5-d87bb8bdd7c9",
      "name": "Merge Items",
      "type": "n8n-nodes-base.merge",
      "position": [
        992,
        32
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "jsCode": "const orderJsonKeys = (jsonObj) => {\n  const ordered = {};\n  Object.keys(jsonObj).sort().forEach(key => {\n    ordered[key] = jsonObj[key];\n  });\n  return ordered;\n}\n\n// Check if file returned with content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Decode base64 content and parse JSON\n  const origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64').toString());\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n// No file returned / new workflow\n} else if (Object.keys($input.all()[0].json).includes(\"data\")) {\n  const origWorkflow = JSON.parse($input.all()[0].json.data);\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n\n} else {\n  // Order JSON object\n  const n8nWorkflow = $input.all()[1].json;\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n  \n  // Proper formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return items\nreturn $input.all();\n"
      },
      "id": "0c9935a4-0289-4959-8a8e-30898e4f6e6d",
      "name": "isDiffOrNew",
      "type": "n8n-nodes-base.code",
      "position": [
        1200,
        32
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "file",
        "owner": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Config').item.json.repo_owner }}"
        },
        "repository": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Config').item.json.repo_name }}"
        },
        "filePath": "={{ $('Config').item.json.repo_path }}/{{$('Loop Over Items').item.json.name}}.json",
        "fileContent": "={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}",
        "commitMessage": "={{$('Loop Over Items').item.json.name}} ({{$json.github_status}})"
      },
      "id": "66543dc2-d546-4677-ab7a-7949be213966",
      "name": "Create new file",
      "type": "n8n-nodes-base.github",
      "position": [
        1648,
        32
      ],
      "webhookId": "b440dead-fad0-4546-8ca7-201aa2ea2936",
      "typeVersion": 1,
      "credentials": {
        "githubOAuth2Api": {
          "id": "C4zUH1OwuLB35bp4",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "file",
        "operation": "edit",
        "owner": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Config').item.json.repo_owner }}"
        },
        "repository": {
          "__rl": true,
          "value": "={{ $('Config').item.json.repo_name }}",
          "mode": "name"
        },
        "filePath": "={{ $('Config').item.json.repo_path }}/{{$('Loop Over Items').item.json.name}}.json",
        "fileContent": "={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}",
        "commitMessage": "={{$('Loop Over Items').item.json.name}} ({{$json.github_status}})"
      },
      "id": "7baf4c8f-6312-47e7-baf5-272184d69501",
      "name": "Edit existing file",
      "type": "n8n-nodes-base.github",
      "position": [
        1648,
        -176
      ],
      "webhookId": "1dfc4103-7c23-4814-a0b5-dd4f5a96d36b",
      "typeVersion": 1,
      "credentials": {
        "githubOAuth2Api": {
          "id": "C4zUH1OwuLB35bp4",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "bb64ed2c-5193-4b8f-a9e8-55cb83ea244c",
              "operator": {
                "type": "dateTime",
                "operation": "afterOrEquals"
              },
              "leftValue": "={{ $json.updatedAt }}",
              "rightValue": "={{ $now.minus(1, 'days') }}"
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "id": "4dce8773-166d-4de1-8098-66806db0cc12",
      "name": "Filter",
      "type": "n8n-nodes-base.filter",
      "position": [
        -128,
        32
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "content": "# How it works \nThis workflow will backup all instance workflows to GitHub every 24 hours.\n\nThe files are saved into folders using `repo_path` for the directory path and `ID.json` for the filename.\nThe Repo Owner, Repo Name and Main folder are set using the `Config` node in the subworkflow. \n\nThe workflow runs calls itself to help reduce memory usage, Once the workflow has completed it will send an optional notification to Slack.\n\nPlease check out my other items on [gumroad](https://boanse.gumroad.com/?section=k_Sn6LcT_dzJFnp5jmsM5A%3D%3D)\nYou might also like something else☺️",
        "height": 340,
        "width": 400
      },
      "id": "a389e0a0-3fc6-4b44-9aa3-5577cb912152",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1648,
        -64
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "6655f56f-b447-43eb-84a2-be8b71524af7",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{$json.github_status}}",
                    "rightValue": "different"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "Different"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "fd0fcdea-e8c0-42be-ba51-5cd2b71ed247",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{$json.github_status}}",
                    "rightValue": "new"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "New"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "ca3b1c68-d756-4de5-b69b-147526e19e35",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{$json.github_status}}",
                    "rightValue": "same"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "Same"
            }
          ]
        },
        "options": {}
      },
      "id": "c697c0cc-ef55-4f48-aebc-326d5e21658e",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "position": [
        1424,
        32
      ],
      "typeVersion": 3.2
    },
    {
      "parameters": {
        "filters": {},
        "requestOptions": {}
      },
      "id": "fd97c31d-ddff-4781-bcbc-3514413134f0",
      "name": "Get Workflows",
      "type": "n8n-nodes-base.n8n",
      "position": [
        -336,
        32
      ],
      "typeVersion": 1,
      "credentials": {
        "n8nApi": {
          "id": "lbAvT1ePxYXR0pr9",
          "name": "n8n account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "03f51f9c-4681-4423-91d2-d32f4c18d6bc",
              "name": "repo_owner",
              "type": "string",
              "value": "devenkhatri"
            },
            {
              "id": "0c9b521a-b698-4b43-9eb0-bbf744760158",
              "name": "repo_name",
              "type": "string",
              "value": "dt-n8n-workflow-backups"
            },
            {
              "id": "91627e70-a71a-4be0-a6f6-b04d5c8469d8",
              "name": "repo_path",
              "type": "string",
              "value": "main-vps-n8n-backups"
            },
            {
              "id": "983a2c87-9d69-4d64-ab88-ec1b1117c6e6",
              "name": "sub_path",
              "type": "string",
              "value": ""
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "f52d9fde-09b2-48a2-a70a-5fcf42cc5540",
      "name": "Config",
      "type": "n8n-nodes-base.set",
      "position": [
        -560,
        32
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 2
            }
          ]
        }
      },
      "id": "5b40db99-23cb-4d75-84c0-6c7e85807762",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        -1008,
        32
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Config').item.json.repo_owner }}"
        },
        "repository": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Config').item.json.repo_name }}"
        },
        "filePath": "={{ $('Config').item.json.repo_path }}/{{$('Loop Over Items').item.json.name}}.json",
        "asBinaryProperty": false,
        "additionalParameters": {}
      },
      "id": "7e4dff19-6c7a-45b5-be43-a2d355a66856",
      "name": "Get a file",
      "type": "n8n-nodes-base.github",
      "position": [
        320,
        -176
      ],
      "webhookId": "c12420d3-b858-4ee4-81c4-9adc03e30865",
      "typeVersion": 1.1,
      "alwaysOutputData": true,
      "credentials": {
        "githubOAuth2Api": {
          "id": "C4zUH1OwuLB35bp4",
          "name": "GitHub account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "628f6e8f-d817-4c53-89ec-b1acbb3dfef8",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              },
              "leftValue": "={{ $json.content }}",
              "rightValue": ""
            },
            {
              "id": "63fc68bb-63d0-40a8-92e4-2a62b5a71812",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              },
              "leftValue": "={{ $json.error }}",
              "rightValue": ""
            }
          ]
        },
        "options": {}
      },
      "id": "223e07d0-9759-4761-b214-e6c594c34705",
      "name": "Is File too large?",
      "type": "n8n-nodes-base.if",
      "position": [
        544,
        -176
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "url": "={{ $json.download_url }}",
        "options": {}
      },
      "id": "bc84f4c0-262d-42bf-9b8c-62c80540187a",
      "name": "Get File",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        768,
        -176
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C09JX12JJP2",
          "mode": "list",
          "cachedResultName": "n8n-notifications"
        },
        "text": "=:information_source:  Starting 'Backup daily n8n Workflows changes To Github' Workflow at {{ $now }} [{{ $execution.id }}]",
        "otherOptions": {
          "includeLinkToWorkflow": true
        }
      },
      "id": "d614951a-a36f-416a-974e-fb114d92f71d",
      "name": "Starting Message",
      "type": "n8n-nodes-base.slack",
      "position": [
        -784,
        32
      ],
      "webhookId": "c02eb407-5547-4aa0-9ebf-46dab67b63b6",
      "typeVersion": 2.2,
      "credentials": {
        "slackOAuth2Api": {
          "id": "SConh1gN2bh0Ijo9",
          "name": "Slack account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C09JX12JJP2",
          "mode": "list",
          "cachedResultName": "n8n-notifications"
        },
        "text": "=✅ 'Backup daily n8n Workflows changes To Github' workflow has completed at {{ $now }}  - {{ $('Get Workflows').all().length }} workflows have been processed.",
        "otherOptions": {}
      },
      "id": "5224214f-7d8d-440d-8942-9f6642139ecd",
      "name": "Completed Notification",
      "type": "n8n-nodes-base.slack",
      "position": [
        368,
        -432
      ],
      "webhookId": "a0c6e8c8-5d71-40fa-b02b-63a7ed5726c4",
      "executeOnce": true,
      "typeVersion": 2.2,
      "credentials": {
        "slackOAuth2Api": {
          "id": "SConh1gN2bh0Ijo9",
          "name": "Slack account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "710b2bdd-2212-41f9-91e8-3b9ca5297654",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        112,
        32
      ],
      "typeVersion": 3
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -1024,
        -208
      ],
      "id": "6bfbf9fb-c3a5-43c0-a82c-2f067bd3c9dc",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1iKP281JRul16R-3RjNqH-IR8hKfx2ExEP8CJcWvIrCg",
          "mode": "list",
          "cachedResultName": "00 - Dhimahi - Tools Used - Master List",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1iKP281JRul16R-3RjNqH-IR8hKfx2ExEP8CJcWvIrCg/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1377354737,
          "mode": "list",
          "cachedResultName": "Automation-Execution-Logs",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1iKP281JRul16R-3RjNqH-IR8hKfx2ExEP8CJcWvIrCg/edit#gid=1377354737"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Workflow Name": "={{ $workflow.name }}",
            "Date Time": "={{ $now.format('ccc, ff') }}",
            "Completion Message": "=✅ 'Backup daily n8n Workflows changes To Github' workflow has completed at {{ $now.format('ccc, ff') }}  - {{ $('Get Workflows').all().length }} workflows have been processed.",
            "Workflow Execution URL": "=  https://n8n.devengoratela.in/workflow/{{ $workflow.id }}/executions/{{ $execution.id }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Workflow Name",
              "displayName": "Workflow Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Date Time",
              "displayName": "Date Time",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Completion Message",
              "displayName": "Completion Message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Workflow Execution URL",
              "displayName": "Workflow Execution URL",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Last Node Executed",
              "displayName": "Last Node Executed",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        608,
        -480
      ],
      "id": "08801593-70e8-468b-97b9-d398f3f35f63",
      "name": "Append row in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "ujTRaPhtGjVV4RCC",
          "name": "Google Sheets account"
        }
      }
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1",
    "timezone": "Asia/Kolkata",
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "WftHi0Te0JlKqc6n"
  },
  "shared": [
    {
      "createdAt": "2025-10-01T05:41:25.952Z",
      "updatedAt": "2025-10-01T05:41:25.952Z",
      "role": "workflow:owner",
      "workflowId": "VL204MyLfbfQpgQS",
      "projectId": "aWyvbmsnIGDehq9r"
    }
  ],
  "staticData": {
    "node:Schedule Trigger": {
      "recurrenceRules": []
    }
  },
  "tags": [
    {
      "createdAt": "2025-10-01T05:17:03.484Z",
      "updatedAt": "2025-10-01T05:17:03.484Z",
      "id": "YfZi53gl026aEXFg",
      "name": "Github"
    },
    {
      "createdAt": "2025-10-01T05:17:08.086Z",
      "updatedAt": "2025-10-01T05:17:08.086Z",
      "id": "kagFIvwd0PCyCKqF",
      "name": "n8n"
    },
    {
      "createdAt": "2025-09-29T05:19:40.477Z",
      "updatedAt": "2025-09-29T05:19:40.477Z",
      "id": "rvS6YFEv4tnJccXU",
      "name": "Slack"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-10-03T05:27:41.000Z",
  "versionId": "0bfc4dbb-f5b1-41ab-be2a-8e7698b45ccd"
}