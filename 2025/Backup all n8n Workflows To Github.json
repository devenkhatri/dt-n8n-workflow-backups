{
  "active": false,
  "connections": {
    "n8n": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Config": {
      "main": [
        [
          {
            "node": "Create sub path",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get File": {
      "main": [
        [
          {
            "node": "Merge Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File is new": {
      "main": [
        [
          {
            "node": "Create new file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Items": {
      "main": [
        [
          {
            "node": "isDiffOrNew",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "isDiffOrNew": {
      "main": [
        [
          {
            "node": "Check Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Status": {
      "main": [
        [
          {
            "node": "Same file - Do nothing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "File is different",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "File is new",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get file data": {
      "main": [
        [
          {
            "node": "If file too large",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create new file": {
      "main": [
        [
          {
            "node": "Return/LoopNext",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create sub path": {
      "main": [
        [
          {
            "node": "Merge Items",
            "type": "main",
            "index": 1
          },
          {
            "node": "Get file data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Completed Notification",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Config",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Starting Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Starting Message": {
      "main": [
        [
          {
            "node": "n8n",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File is different": {
      "main": [
        [
          {
            "node": "Edit existing file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If file too large": {
      "main": [
        [
          {
            "node": "Get File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit existing file": {
      "main": [
        [
          {
            "node": "Return/LoopNext",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "On clicking 'execute'": {
      "main": [
        [
          {
            "node": "Starting Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Same file - Do nothing": {
      "main": [
        [
          {
            "node": "Return/LoopNext",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Return/LoopNext": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-10-01T05:16:29.383Z",
  "id": "KthESEbU2WAKMU1x",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Backup all n8n Workflows To Github",
  "nodes": [
    {
      "parameters": {},
      "id": "010045f0-6da1-4169-85e8-1cc8b06dd12f",
      "name": "On clicking 'execute'",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        -80,
        -160
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Subworkflow",
        "height": 748,
        "width": 2647,
        "color": 6
      },
      "id": "d2c62ec5-e2e9-45e8-a623-8e07c2baad61",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -560,
        224
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "filters": {},
        "requestOptions": {}
      },
      "id": "1ee878f6-5538-4727-bd9c-c14ccb06b18e",
      "name": "n8n",
      "type": "n8n-nodes-base.n8n",
      "position": [
        320,
        -48
      ],
      "typeVersion": 1,
      "credentials": {
        "n8nApi": {
          "id": "lbAvT1ePxYXR0pr9",
          "name": "n8n account"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $json.download_url }}",
        "options": {}
      },
      "id": "22188432-cea3-4339-af56-2283c5295a21",
      "name": "Get File",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        560,
        368
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "45ce825e-9fa6-430c-8931-9aaf22c42585",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              },
              "leftValue": "={{ $json.content }}",
              "rightValue": ""
            },
            {
              "id": "9619a55f-7fb1-4f24-b1a7-7aeb82365806",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              },
              "leftValue": "={{ $json.error }}",
              "rightValue": ""
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "f710ff1a-26b8-4a6b-91eb-694f59f7065a",
      "name": "If file too large",
      "type": "n8n-nodes-base.if",
      "position": [
        336,
        448
      ],
      "typeVersion": 2
    },
    {
      "parameters": {},
      "id": "e64b97c2-db1c-403c-bb41-0ea24c5c6a47",
      "name": "Merge Items",
      "type": "n8n-nodes-base.merge",
      "position": [
        784,
        512
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "jsCode": "const orderJsonKeys = (jsonObj) => {\n  const ordered = {};\n  Object.keys(jsonObj).sort().forEach(key => {\n    ordered[key] = jsonObj[key];\n  });\n  return ordered;\n}\n\n// Check if file returned with content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Decode base64 content and parse JSON\n  const origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64').toString());\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n// No file returned / new workflow\n} else if (Object.keys($input.all()[0].json).includes(\"data\")) {\n  const origWorkflow = JSON.parse($input.all()[0].json.data);\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n\n} else {\n  // Order JSON object\n  const n8nWorkflow = $input.all()[1].json;\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n  \n  // Proper formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return items\nreturn $input.all();\n"
      },
      "id": "dee73daf-4093-4eb6-a6ad-6b61de3e32b5",
      "name": "isDiffOrNew",
      "type": "n8n-nodes-base.code",
      "position": [
        1008,
        512
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "={{$json.github_status}}",
        "rules": {
          "rules": [
            {
              "value2": "same"
            },
            {
              "value2": "different",
              "output": 1
            },
            {
              "value2": "new",
              "output": 2
            }
          ]
        }
      },
      "id": "08e49d7c-6248-4935-b0e9-f3160e286af2",
      "name": "Check Status",
      "type": "n8n-nodes-base.switch",
      "position": [
        1232,
        480
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "c884f559-5292-42a7-b76b-d5ded9bdcd38",
      "name": "Same file - Do nothing",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1680,
        320
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "0a178cd8-310b-4e4d-9536-de21fd7eb3dc",
      "name": "File is different",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1456,
        512
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "fc7ab6b7-9712-48fa-a06a-5aab362e042c",
      "name": "File is new",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1456,
        704
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "file",
        "owner": {
          "__rl": true,
          "value": "={{ $('Config').item.json.repo_owner }}",
          "mode": ""
        },
        "repository": {
          "__rl": true,
          "value": "={{ $('Config').item.json.repo_name }}",
          "mode": ""
        },
        "filePath": "={{ $('Config').item.json.repo_path }}{{ $json.subPath }}{{ $('n8n').item.json.id }}.json",
        "fileContent": "={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}",
        "commitMessage": "={{ $('n8n').item.json.name }} ({{$json.github_status}})"
      },
      "id": "a7c47bc0-4761-4ca4-b082-df960aba2575",
      "name": "Create new file",
      "type": "n8n-nodes-base.github",
      "position": [
        1680,
        704
      ],
      "typeVersion": 1,
      "webhookId": "628b05d8-74a3-440b-b1d5-47d287f03b05",
      "credentials": {
        "githubOAuth2Api": {
          "id": "C4zUH1OwuLB35bp4",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "file",
        "operation": "edit",
        "owner": {
          "__rl": true,
          "value": "=  {{ $('Config').item.json.repo_owner }}",
          "mode": ""
        },
        "repository": {
          "__rl": true,
          "value": "={{ $('Config').item.json.repo_name }}",
          "mode": ""
        },
        "filePath": "={{ $('Config').item.json.repo_path }}{{ $('Create sub path').item.json.subPath }}{{ $('n8n').item.json.id }}.json",
        "fileContent": "={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}",
        "commitMessage": "={{ $('n8n').item.json.name }} ({{$json.github_status}})"
      },
      "id": "7983af2d-8c6e-421d-91b1-3bc8317e0bc7",
      "name": "Edit existing file",
      "type": "n8n-nodes-base.github",
      "position": [
        1680,
        512
      ],
      "typeVersion": 1,
      "webhookId": "bb75acd8-12e2-4fb1-bee2-2fbc3fb0f84d",
      "credentials": {
        "githubOAuth2Api": {
          "id": "C4zUH1OwuLB35bp4",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "90f7b8c6-68a6-425c-be43-38a33213fc67",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        528,
        -48
      ],
      "typeVersion": 3
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 1,
              "triggerAtMinute": 33
            }
          ]
        }
      },
      "id": "85e6817e-3e8c-4116-aa3c-2d4b64769bc2",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        -80,
        48
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "dae43d3b-56e5-4098-b602-862ebf5cd073",
              "name": "subPath",
              "type": "string",
              "value": "={{ $('n8n').item.json.createdAt.split(\"-\")[0] }}-{{ $('n8n').item.json.createdAt.split(\"-\")[1] }}/"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "375f891c-60ce-4bf0-9f18-7921395df403",
      "name": "Create sub path",
      "type": "n8n-nodes-base.set",
      "position": [
        -112,
        512
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {
        "content": "## Backup to GitHub \nThis workflow will backup all instance workflows to GitHub every 24 hours.\n\nThe files are saved into folders using `YYYY/MM/` for the directory path and `ID.json` for the filename.\n\nThe Repo Owner, Repo Name and Main folder are set using the **Variables** feature but can be replaced with the `Config` node in the subworkflow. \n\nThe workflow runs calls itself to help reduce memory usage, Once the workflow has completed it will send an optional notification to Slack.\n\n### Time to Run\nTested with 1423 workflows on `1.44.1` it took under 30 minutes for the first run and under 12 minutes once the initial run is complete.",
        "height": 417,
        "width": 385,
        "color": 4
      },
      "id": "5b1828a8-cbba-4755-a3fa-fb4e2281cc31",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -560,
        -240
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Main workflow loop",
        "height": 416.1856906618075,
        "width": 1272.6408145680155,
        "color": 7
      },
      "id": "e4c931d4-7f64-4a59-af0c-b0fa0d67b831",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -112,
        -240
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C09JX12JJP2",
          "mode": "list",
          "cachedResultName": "n8n-notifications"
        },
        "text": "=:information_source:  Starting n8n Workflows Backup to Github [{{ $execution.id }}]",
        "otherOptions": {
          "includeLinkToWorkflow": false
        }
      },
      "id": "ba150535-5b0b-4a49-bf0b-055a6a305415",
      "name": "Starting Message",
      "type": "n8n-nodes-base.slack",
      "position": [
        160,
        -48
      ],
      "webhookId": "c02eb407-5547-4aa0-9ebf-46dab67b63b6",
      "typeVersion": 2.2,
      "credentials": {
        "slackOAuth2Api": {
          "id": "SConh1gN2bh0Ijo9",
          "name": "Slack account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C09JX12JJP2",
          "mode": "list",
          "cachedResultName": "n8n-notifications"
        },
        "text": "=✅ n8n Workflow Backup has completed - {{ $('n8n').all().length }} workflows have been processed.",
        "otherOptions": {}
      },
      "id": "5b83fda2-1ee7-489f-88b9-b191fd978dbc",
      "name": "Completed Notification",
      "type": "n8n-nodes-base.slack",
      "position": [
        784,
        -192
      ],
      "webhookId": "a0c6e8c8-5d71-40fa-b02b-63a7ed5726c4",
      "executeOnce": true,
      "typeVersion": 2.2,
      "credentials": {
        "slackOAuth2Api": {
          "id": "SConh1gN2bh0Ijo9",
          "name": "Slack account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "value": "={{ $('Config').item.json.repo_owner }}",
          "mode": ""
        },
        "repository": {
          "__rl": true,
          "value": "={{ $('Config').item.json.repo_name }}",
          "mode": ""
        },
        "filePath": "={{ $('Config').item.json.repo_path }}{{$json.subPath}}{{$('Config').item.json.id}}.json",
        "asBinaryProperty": false,
        "additionalParameters": {}
      },
      "id": "67715ea8-cbdb-4821-bed7-fd0871eba415",
      "name": "Get file data",
      "type": "n8n-nodes-base.github",
      "position": [
        112,
        448
      ],
      "typeVersion": 1,
      "alwaysOutputData": true,
      "webhookId": "24b2d8e8-a515-4d84-aaba-3807227373f6",
      "credentials": {
        "githubOAuth2Api": {
          "id": "C4zUH1OwuLB35bp4",
          "name": "GitHub account"
        }
      },
      "continueOnFail": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8f6d1741-772f-462a-811f-4c334185e4f0",
              "name": "repo_owner",
              "type": "string",
              "value": "=devenkhatri"
            },
            {
              "id": "8cac215c-4fd7-422f-9fd2-6b2d1e5e0383",
              "name": "repo_name",
              "type": "string",
              "value": "=dt-n8n-workflow-backups"
            },
            {
              "id": "eee305e9-4164-462a-86bd-80f0d58a31ae",
              "name": "repo_path",
              "type": "string",
              "value": "=main-vps-n8n-backups/"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "509eed39-b601-4fa2-9d67-9a167f9517e9",
      "name": "Config",
      "type": "n8n-nodes-base.set",
      "position": [
        -336,
        512
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8d513345-6484-431f-afb7-7cf045c90f4f",
              "name": "Done",
              "type": "boolean",
              "value": true
            }
          ]
        },
        "options": {}
      },
      "id": "7127cd9a-ad5c-4b13-9f33-d5d51dbc3862",
      "name": "Return/LoopNext",
      "type": "n8n-nodes-base.set",
      "position": [
        1904,
        512
      ],
      "typeVersion": 3.3
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "WftHi0Te0JlKqc6n",
    "timezone": "Asia/Kolkata"
  },
  "shared": [
    {
      "createdAt": "2025-10-01T05:16:29.395Z",
      "updatedAt": "2025-10-01T05:16:29.395Z",
      "role": "workflow:owner",
      "workflowId": "KthESEbU2WAKMU1x",
      "projectId": "aWyvbmsnIGDehq9r"
    }
  ],
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-10-01T05:17:03.484Z",
      "updatedAt": "2025-10-01T05:17:03.484Z",
      "id": "YfZi53gl026aEXFg",
      "name": "Github"
    },
    {
      "createdAt": "2025-10-01T05:17:08.086Z",
      "updatedAt": "2025-10-01T05:17:08.086Z",
      "id": "kagFIvwd0PCyCKqF",
      "name": "n8n"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2025-10-01T07:40:27.000Z",
  "versionId": "b87d027d-7fdd-4191-af46-ac62f3c0aa20"
}