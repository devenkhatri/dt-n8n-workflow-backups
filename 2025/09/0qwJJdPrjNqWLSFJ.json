{
  "active": false,
  "connections": {
    "form_trigger": {
      "main": [
        [
          {
            "node": "scrape_youtube_video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "scrape_youtube_video": {
      "main": [
        [
          {
            "node": "set_youtube_details",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "set_twitter_examples": {
      "main": [
        [
          {
            "node": "build_twitter_prompt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "build_twitter_prompt": {
      "main": [
        [
          {
            "node": "write_tweets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "claude-sonnet-4": {
      "ai_languageModel": [
        [
          {
            "node": "write_tweets",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "tweet_parser",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "write_linked_in_posts",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "linked_in_parser",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "tweet_parser": {
      "ai_outputParser": [
        [
          {
            "node": "write_tweets",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "write_tweets": {
      "main": [
        [
          {
            "node": "send_initial_tweets_msg",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "set_youtube_details": {
      "main": [
        [
          {
            "node": "set_linked_in_examples",
            "type": "main",
            "index": 0
          },
          {
            "node": "set_twitter_examples",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "set_linked_in_examples": {
      "main": [
        [
          {
            "node": "build_linked_in_prompt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "build_linked_in_prompt": {
      "main": [
        [
          {
            "node": "write_linked_in_posts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "linked_in_parser": {
      "ai_outputParser": [
        [
          {
            "node": "write_linked_in_posts",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "write_linked_in_posts": {
      "main": [
        [
          {
            "node": "send_initial_linked_in_msg",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "send_initial_linked_in_msg": {
      "main": [
        [
          {
            "node": "set_linked_in_options",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "set_linked_in_options": {
      "main": [
        [
          {
            "node": "split_linked_in_options",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "split_linked_in_options": {
      "main": [
        [
          {
            "node": "send_linked_in_post_msg",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "send_initial_tweets_msg": {
      "main": [
        [
          {
            "node": "set_twitter_options",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "set_twitter_options": {
      "main": [
        [
          {
            "node": "split_tweet_options",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "split_tweet_options": {
      "main": [
        [
          {
            "node": "send_tweet_msg",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-09-30T19:20:41.232Z",
  "id": "0qwJJdPrjNqWLSFJ",
  "isArchived": false,
  "meta": null,
  "name": "The Recap AI - Repurpose YouTube Video To Socials",
  "nodes": [
    {
      "parameters": {
        "formTitle": "YouTube To Twitter",
        "formFields": {
          "values": [
            {
              "fieldLabel": "YouTube Video Url",
              "placeholder": "https://www.youtube.com/watch?v=C65c8itWvf4",
              "requiredField": true
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.formTrigger",
      "typeVersion": 2.2,
      "position": [
        -864,
        560
      ],
      "id": "01710240-21f0-4e40-b4d9-389d19c72538",
      "name": "form_trigger",
      "webhookId": "c9a91bc3-2702-4710-980a-30a46aa5d687"
    },
    {
      "parameters": {
        "url": "https://api.apify.com/v2/acts/streamers~youtube-scraper/run-sync-get-dataset-items",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"downloadSubtitles\": true,\n  \"hasCC\": false,\n  \"hasLocation\": false,\n  \"hasSubtitles\": false,\n  \"is360\": false,\n  \"is3D\": false,\n  \"is4K\": false,\n  \"isBought\": false,\n  \"isHD\": false,\n  \"isHDR\": false,\n  \"isLive\": false,\n  \"isVR180\": false,\n  \"maxResultStreams\": 0,\n  \"maxResults\": 1,\n  \"maxResultsShorts\": 0,\n  \"preferAutoGeneratedSubtitles\": false,\n  \"saveSubsToKVS\": false,\n  \"startUrls\": [\n    {\n      \"url\": \"{{ $('form_trigger').item.json['YouTube Video Url'] }}\",\n      \"method\": \"GET\"\n    }\n  ],\n  \"subtitlesLanguage\": \"en\",\n  \"subtitlesFormat\": \"srt\"\n}",
        "options": {
          "timeout": 300000
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -640,
        560
      ],
      "id": "18653680-7216-41f6-986b-2260fbd27057",
      "name": "scrape_youtube_video"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d57e0f6b-d927-4e17-9513-ea839db7faec",
              "name": "twitter_examples",
              "value": "### Tweet Example 1\n\n500M+ views. 0 cameras. Just code.\n\nAI-generated vlogs (Bigfoot adventures, Stormtrooper diaries, whisper-soft ASMR cuts) are blowing up every feed you scroll. \n\nSo I spent the weekend building an auto-pilot system that cranks them out while you sleep‚Ä¶ and I‚Äôm giving it away free\n\nHow it works (8-scene magic):\n\n- Drop in a one-line idea ‚Äì ‚ÄúBigfoot uncovers a WWII plane.‚Äù\n- Automation drafts the full script, crafts hyper-detailed prompts, and feeds VEO-3.\n- Out come ready-to-stitch clips‚Äîno camera, no editing skills needed.\n\nCreators are using this exact workflow to jump from zero to 200K+ followers overnight. I reverse-engineered every prompt so you don‚Äôt have to.\n\nWant the template?\n\nTap ‚Äúüëç Like‚Äù so it saves to your profile.\n\nFollow, RT, and Comment 'VIDEO' below.\nI‚Äôll DM you the full package‚Äîscripts, prompts, and n8n automation‚Äîfree.\n\nFull teardown video is parked in the comments. Copy, paste, and start posting vlogs in minutes.\n\n### Tweet Example 2\n\ni built an AI agent that generates 30+ videos per week using Veo 3 \n\nfully automated, runs while i sleep\n\nhow it works:\n\n> input prompt\n> creates videos using Veo 3 api\n> write engaging titles with o3\n> auto-upload on YouTube\n\nno editing\nno manual upload\n\nruns 24/7\n\nfollow & comment \"veo agent\" and i'll send you the step-by-step guide\n\n### Tweet Example 3\n\nThis n8n workflow turns ANY viral YouTube video into a banger X thread automatically.\n\nThe AI agent is trained on threads that have gotten 16M+ views.\n\nAll you need to do is drop a keyword, and you get viral-ready threads.\n\nFollow + comment \"THREAD\" and I'll dm the full workflow.\n\n### Tweet Example 4\n\nif you do cold email and are still writing emails manually in 2025, you're so behind. lets fix that...\n\nthis n8n workflow writes and sends 10,000+ fully personalized cold emails for you:\n- scrapes ideal leads with apollo\n- uses GPT to analyze their site and LinkedIn\n- writes tailored outreach based on their business\n- sends the emails on autopilot using instantly\n\nbuilt for freelancers, agencies, and leadgen killers\n\nwant the full flow + setup SOP?\n\ncomment ‚ÄúEMAIL‚Äù, follow, + repost and I‚Äôll send it over (must be following so I can DM)\n\n### Tweet Example 5\n\nYES! Google's Veo 3 is now in n8n! ü§Ø\n\nThis AI system uses the viral Veo 3 model to create AI videos at scale:\n\n‚Üí AI agent generates viral video ideas\n‚Üí Records everything in Airtable database\n‚Üí Generates video content with FalAI and Veo 3\n‚Üí Logs finished directly into your Airtable system for easy tracking\n\nBuilt 100% in n8n. Fully automated. \n\nLike + RT + comment ‚ÄúVEO3‚Äù & I‚Äôll send you the COMPLETE workflow FREE!\n\n### Tweet Example 6\n\nI used this n8n workflow to scrape X for top-performing posts in my niche (it's a big part of how I went from 600 ‚Üí 6k followers in 13 days)\n\nmost creators scroll for hours to find content ideas that work...\n\nwhereas I just run this flow and get a full swipe file in minutes - organized by likes, comments, shares and URLs.\n\nhere‚Äôs what it does:\n- drop in a keyword\n- scrapes X for top posts\n- pulls engagement data + content\n- auto-sorts it all into a Google Sheet\n\nnow you've got data-backed insights ready to plug into your tweets, ads, or even video scripts.\n\nworkflow takes 5 minutes to set up\n\nwant the full JSON?\n\ncomment ‚ÄúSWIPE‚Äù, follow, + repost and I‚Äôll send it over (must be following so I can DM)\n\n### Tweet Example 7\n\nThis Social Media Content Factory Agent is WILD:\n\nStreamline your content production across 7+ platforms.\n\n‚Äì Generate platform-specific posts using GPT-4\n‚Äì Create hashtags, CTAs, and emojis\n‚Äì Suggest images/videos with OpenAI \n‚Äì Search relevant content via SERP API\n‚Äì Reduce manual work by 80%\n\nApproval & Publishing:\n\n‚Äì Sends HTML emails for reviews\n‚Äì Double-approval system in Gmail\n‚Äì One-click deployment to Instagram, Facebook, X/Twitter, LinkedIn\n\nFollow + RT + reply ‚ÄúAGENT‚Äù & I‚Äôll send you the FULL template for FREE.\n\n### Tweet Example 8\n\nWTF!! This CLIP FACTORY is WILD‚Ä¶\n\nThis AI Agent turns 1 longform YT video into 8 shortform clips across 4 platforms, fully automated:\n\n‚Üí Pulls YouTube links from a Google Sheets (provided)\n‚Üí Auto-generates 2 clips w/ captions, emojis, silence removal, reframing (1080x1920)\n‚Üí Publishes to TikTok, IG, YT Shorts & LinkedIn (+more)\n‚Üí Applies platform-specific captions\n‚Üí Tracks post links + status in Sheets\n\nBuilt 100% in n8n. Runs daily. No editors or VAs. Just clips running full auto. \n\nFollow + RT + reply ‚ÄúCLIP‚Äù & I‚Äôll send you the FULL flow + setup guide FREE!",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        160,
        224
      ],
      "id": "476aa467-8b47-4429-b93b-7d74ad714d59",
      "name": "set_twitter_examples"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "00020fad-c763-4aa1-8d3d-a56ba1c7dbb7",
              "name": "twitter_prompt",
              "value": "=**ROLE:**\nYou are a world-class social media copywriter and viral growth hacker. Your expertise is in the AI, automation, and no-code space on Twitter/X. You are a master at deconstructing viral content and applying its core principles to generate new, successful posts.\n\n**OBJECTIVE:**\nYour mission is to generate **three distinct, high-potential viral tweets**. This tweet will promote a specific n8n automation, with the ultimate goal of getting people to follow my profile, retweet the post, and comment a specific keyword to receive the n8n workflow template via DM.\n\n**STEP 1: ANALYZE SOURCE MATERIAL**\nFirst, meticulously analyze the provided YouTube video transcript below. Do not summarize it. Instead, your goal is to extract the following key elements:\n1.  **The Core Pain Point:** What is the single most frustrating, time-consuming, or tedious manual task that this automation eliminates?\n2.  **The \"Magic\" Solution:** What is the most impressive or \"wow\" moment of the automation? What does it enable the user to do that felt impossible or difficult before?\n3.  **The Quantifiable Outcome:** Identify any specific metrics of success mentioned (e.g., \"saves 10 hours a week,\" \"processes 100 leads a day,\" \"automates 90% of the workflow\"). If none are mentioned, create a powerful and believable one.\n\n<youtube_video_transcript>\n{{ $('set_youtube_details').item.json.transcript }}\n</youtube_video_transcript>\n\n**STEP 2: STUDY INSPIRATIONAL EXAMPLES**\nNext, study the structure, tone, and psychological hooks of the following successful tweets. These examples are your primary source for determining the structure of the tweets you will generate.\n\n<twitter_tweet_examples>\n{{ $('set_twitter_examples').item.json.twitter_examples }}\n</twitter_tweet_examples>\n\n**STEP 3: DECONSTRUCT EXAMPLES & GENERATE TWEETS**\nNow you will generate the 3 unique, viral tweet options. Your primary task is to act as a structural analyst: **analyze the provided examples, identify the most effective structures, and then apply those structures** to the content from Step 1.\n\n**Your process:**\n1.  **Identify Core Structures:** Analyze the `<twitter_tweet_examples>`. Identify the different underlying formats. For instance, is there a \"Problem ‚Üí Solution\" structure? A \"Shocking Result ‚Üí How-to\" structure? A \"Controversial Statement ‚Üí Justification\" structure? Identify the 3 most distinct and powerful structures present.\n2.  **Map Content to Structures:** For each of the 3 structures you identified, map the \"Pain Point,\" \"Magic Solution,\" and \"Outcome\" from Step 1 into that framework.\n3.  **Craft the Tweets:** Generate one tweet for each of the 3 structures you've chosen. The structure of each tweet (the hook, the flow, the tone) should directly mirror the style of the example it is based on.\n\n**Essential Components:**\nWhile you choose the overall structure, ensure each tweet you craft contains these four key elements, integrated naturally within the chosen format:\n-   **A Powerful Hook:** The opening line that grabs attention.\n-   **A Clear Value Proposition:** The \"what's in it for me\" for the reader.\n-   **An Irresistible Offer:** The free n8n workflow template.\n-   **A High-Engagement Call to Action (CTA):** The final call to action must include elements the ask for a follow, a retweet, and a comment of the \"[KEYWORD]\". \n\n**CONSTRAINTS:**\n-   Vary light use of emojis to add personality and break up the text. Not all Tweets you write should have emojis.\n-   Keep the tone energetic, confident, and educational, mirroring the tone found in the examples.\n-   Ensure the chosen `[KEYWORD]` is simple, relevant, and in all caps.\n\nNow, generate the 3 distinct tweet options, clearly labeled as **Tweet Option 1**, **Tweet Option 2**, and **Tweet Option 3**. For each option, briefly state which example structure you are applying. (e.g., \"Tweet Option 1: Applying the 'Problem ‚Üí Solution' structure from Example 2.\").",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        384,
        224
      ],
      "id": "36026fc0-12ac-4937-8e12-f1cf5c67a4d5",
      "name": "build_twitter_prompt"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('build_twitter_prompt').item.json.twitter_prompt }}",
        "hasOutputParser": true,
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        608,
        224
      ],
      "id": "b33c3331-fc60-4937-98ed-bdefe545c7b9",
      "name": "write_tweets",
      "retryOnFail": true
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "claude-sonnet-4-20250514",
          "mode": "list",
          "cachedResultName": "Claude Sonnet 4"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatAnthropic",
      "typeVersion": 1.3,
      "position": [
        1888,
        1360
      ],
      "id": "575de5cf-b4db-4749-ad8a-71537abce94a",
      "name": "claude-sonnet-4"
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"title\": \"Generated Viral Tweet Options\",\n  \"description\": \"A structured output containing the best three distinct tweet variations for an n8n automation promotion.\",\n  \"type\": \"object\",\n  \"required\": [\n    \"tweet_options\"\n  ],\n  \"properties\": {\n    \"tweet_options\": {\n      \"description\": \"An array containing the three generated tweet objects.\",\n      \"type\": \"array\",\n      \"minItems\": 3,\n      \"maxItems\": 3,\n      \"items\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"analysis\",\n          \"tweet_text\"\n        ],\n        \"properties\": {\n          \"analysis\": {\n            \"description\": \"The LLM's explanation of which example structure it applied to generate this tweet.\",\n            \"type\": \"string\"\n          },\n          \"tweet_text\": {\n            \"description\": \"The full, ready-to-post text of the tweet, including line breaks.\",\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}",
        "autoFix": true
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        688,
        448
      ],
      "id": "c53aee87-03d3-4039-8147-f3d73716ec23",
      "name": "tweet_parser"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b67a6f9a-0d76-4afb-8738-f05e28382f47",
              "name": "title",
              "value": "={{ $json.title }}",
              "type": "string"
            },
            {
              "id": "95ab74c9-d031-4681-b844-0d24b837a300",
              "name": "transcript",
              "value": "={{ $json.subtitles.first().srt }}",
              "type": "string"
            },
            {
              "id": "a317f1cd-f7a1-4902-ac09-09b46d3e53ce",
              "name": "url",
              "value": "={{ $json.url }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -416,
        560
      ],
      "id": "1501de83-482d-4c13-946e-06b583b6386f",
      "name": "set_youtube_details"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d57e0f6b-d927-4e17-9513-ea839db7faec",
              "name": "linked_in_examples",
              "value": "### LinkedIn Example 1\n\nThese Google Veo 3 glass fruit ASMR videos have been going viral... so I built a system to 100% automate it with no code.\n\nThis end-to-end n8n workflow handles everything from content ideation to publishing, enabling you to scale YouTube, Instagram, and TikTok with zero manual effort.\n\nI just dropped a 17 minute YouTube video where I cover:\n‚Üí How the prompts and visual concepts are generated\n‚Üí How Veo 3 is integrated for high-quality video creation (and sound)\n‚Üí How the system can post hourly and keep the ideas fresh\n‚Üí How you can set this up in minutes with my FREE resources\n\nThis system has already produced multiple shorts for me that have gotten tens of thousands of views.\n\nI'm not saying this is an easy way to blow up a channel and get rich, but there is definitely a market for this type of content, you just need a few to catch the algorithm and ride the wave. \n‚Üí Your chances are much higher with an automation that runs while you sleep.\n\n### LinkedIn Example 2\n\nI Built a Faceless Shorts Machine for $0.75 with AI and n8n\n\nEver come across something online and think‚Ä¶\"I bet I could automate that.\"?\n\nThat's what I did this week with this experiment. I noticed a YouTube channel that has blown up to 680k subs with only 11 AI generated shorts. This was my inspiration.\n\nI decided to build an end-to-end automation that creates, renders, and posts short-form videos across YouTube, Instagram, and TikTok without writing a single line of code. Each video costs under a dollar. \n\nWhenever I post videos about AI-generated content, I get a lot of comments about ‚ÄúAI slop‚Äù and how it's polluting the Internet. My response to that is simple:\n1) If you don‚Äôt like it, don‚Äôt watch it, the algorithm will do its job and push it away from your feed.\n2) The point of these videos isn‚Äôt to flood the internet. It‚Äôs to show people how to break down a creative output into parts, automate one piece at a time, and then stitch it all back together. The real power is developing the mindset to spot something and think, ‚ÄúI can automate this.‚Äù\n\nAnd when it comes to automating AI-generated content, everything hinges on the prompt. That‚Äôs where the magic happens. A well-crafted prompt is what turns generic output into something people actually want to watch.\n\nIf you're curious about how I did it (and want to play around with the free template), I just dropped a full 30-minute walkthrough on YouTube breaking down every piece.\n\n### LinkedIn Example 3\n\nOne Tool. 4,500+ Scrapers. No Code.\n\nApify has 4,500+ pre-built actors (essentially web scrapers) that let you pull data from platforms like Instagram, Google Maps, LinkedIn, TikTok, and more. \n\nYou just need to provide what type of data you want and from what platform, similar to ordering food off a menu from your favorite restaurant.\n\nWhen you connect Apify to n8n, you can fully automate the entire workflow:\n‚Ü≥ Scrape leads\n‚Ü≥ Research them automatically\n‚Ü≥ Personalize outreach\n‚Ü≥ Create content based on what you pull back\n‚Ü≥ Etc\n\nThe possibilities are endless once you start using Apify + n8n together and all you have to do is copy and paste things. Couldn't be easier.\n\nI just made a quick 8-minute tutorial on YouTube showing the easiest way to get started.\n\n### LinkedIn Example 4\n\nI automated my entire social media workflow in 30 minutes. \n\n(Save $24K/year in manual work, boosts lead flow by 35%)\n\nHere's how the automation works:\n\n‚Üí AI generates platform-specific versions of your content for LinkedIn, Instagram, and Facebook\n‚Üí Posts are sent to you via email for quick approval\n‚Üí Approved content is automatically published across all platforms\n‚Üí Lead form data and publishing metrics are tracked in a central dashboard\n‚Üí Everything is managed from one place, no platform-switching needed\n\nThis automation saves me 5+ hours every week and consistently brings in qualified leads while I sleep.\n\nWant the complete blueprint? Here are the steps:\n\n1. Like this post\n2. Connect with me\n3. Comment \"WORKFLOW\"\n4. (Optional) Tag someone who would love this automation\n\nI'll send you the entire system for free.\n\nNo more copying and pasting between platforms or spending hours scheduling posts.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        160,
        880
      ],
      "id": "976da208-afd0-40df-bd66-588514a65603",
      "name": "set_linked_in_examples"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "00020fad-c763-4aa1-8d3d-a56ba1c7dbb7",
              "name": "linked_in_prompt",
              "value": "=**ROLE:**\nYou are a world-class B2B content strategist and LinkedIn growth expert. Your expertise lies in creating compelling professional content around AI, automation, and no-code solutions. You are a master of professional storytelling, turning technical case studies into insightful, engaging posts that drive meaningful connections and establish thought leadership.\n\n**OBJECTIVE:**\nYour mission is to generate **three distinct, high-potential LinkedIn posts**. Each post will promote a specific n8n automation, framing it as a professional case study. The ultimate goals are to:\n1.  Grow my LinkedIn professional network (followers).\n2.  Establish my profile as a go-to resource for AI and automation.\n3.  Drive awareness and interest in my YouTube channel and Skool community.\n4.  Get users to comment for a lead magnet (the n8n workflow).\n\n**STEP 1: ANALYZE SOURCE MATERIAL (THE BUSINESS CASE)**\nFirst, meticulously analyze the provided YouTube video transcript. Do not summarize it. Instead, extract the following key business-oriented elements:\n1.  **The Business Pain Point:** What common, frustrating, or inefficient business process does this automation solve? Frame it in terms of lost time, potential for human error, or missed opportunities.\n2.  **The Strategic Solution:** How does the n8n automation provide a smart, strategic solution? What is the core \"insight\" or \"lever\" it uses to create value?\n3.  **The Quantifiable Business Impact:** What is the measurable outcome? Frame it in business terms (e.g., \"reclaimed 10+ hours for strategic work,\" \"achieved 99% accuracy in data processing,\" \"reduced new client onboarding time by 50%\"). If not explicitly mentioned, create a powerful and believable metric.\n\n<youtube_video_transcript>\n{{ $('set_youtube_details').item.json.transcript }}\n</youtube_video_transcript>\n\n**STEP 2: STUDY INSPIRATIONAL EXAMPLES (LINKEDIN POSTS)**\nNext, study the structure, tone, and especially the Call to Action (CTA) of the following successful LinkedIn posts. These examples are your primary source for determining the structure of the posts you will generate. Pay close attention to the length of the examples as they \"feel\" right in length.\n\n<linkedin_post_examples>\n{{ $('set_linked_in_examples').item.json.linked_in_examples }}\n</linkedin_post_examples>\n\n**STEP 3: DECONSTRUCT EXAMPLES & GENERATE POSTS**\nNow you will generate 3 unique LinkedIn post options. Your primary task is to act as a content strategist: **analyze the provided LinkedIn examples, identify the most effective post structures, and then apply those structures** to the business case from Step 1.\n\n**Your process:**\n1.  **Identify Core Structures:** Analyze the `<linkedin_post_examples>`. Identify 3 distinct formats (e.g., \"Problem/Agitate/Solve,\" \"Personal Story ‚Üí Business Lesson,\" \"Contrarian Take ‚Üí Justification\").\n2.  **Map Content to Structures:** For each structure, weave the \"Business Pain Point,\" \"Strategic Solution,\" and \"Business Impact\" into a compelling narrative.\n3.  **Craft the Posts:** Generate one post for each chosen structure. The post should be highly readable, using short paragraphs and ample white space.\n\n**Essential Components for each LinkedIn Post:**\n-   **An Intriguing Hook:** A first line that stops the scroll and speaks to a professional ambition or frustration.\n-   **A Relatable Story/Problem:** Briefly set the scene using the \"Business Pain Point.\"\n-   **The Insightful Solution:** Explain the \"Strategic Solution\" as the turning point.\n-   **A Dynamic, High-Engagement Call to Action (CTA):** This is critical. Instead of a fixed format, you will **craft the most effective CTA by analyzing the examples provided.** Your CTA must accomplish two things:\n    1.  Clearly state how to get the free n8n workflow template by commenting with a specific `[KEYWORD]`.\n    2.  Naturally encourage following my profile and sharing the post. Draw inspiration for the wording and style directly from the successful CTAs in the examples. If it fits the narrative, you can subtly mention that more deep dives are on my YouTube or in my Skool community.\n\n**CONSTRAINTS:**\n-   Use emojis sparingly and professionally (e.g., ‚úÖ, üí°, üöÄ) to enhance readability.\n-   The tone must be professional, insightful, and helpful.\n-   The `[KEYWORD]` should be a professional, single word in all caps (e.g., BLUEPRINT, WORKFLOW, SYSTEM).\n\n**FINAL OUTPUT FORMAT:**\nYou MUST format your entire response as a single, valid JSON object. The root of the object should be a key named \"post_options\", which contains an array of three post objects. Adhere strictly to the following structure for each object:\n{\n  \"analysis\": \"<string: Explain which LinkedIn example structure was applied>\",\n  \"post_text\": \"<string: The full text of the LinkedIn post, with line breaks>\"\n}\nDo not include any text or explanations outside of the JSON object.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        384,
        880
      ],
      "id": "b1ea13ee-46cf-417b-93bc-6f7f40ce5c1f",
      "name": "build_linked_in_prompt"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('build_linked_in_prompt').item.json.linked_in_prompt }}",
        "hasOutputParser": true,
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        608,
        880
      ],
      "id": "761cdf90-8ce4-46c1-b95c-bd31a2dd9a4c",
      "name": "write_linked_in_posts",
      "retryOnFail": true
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"title\": \"Generated LinkedIn Post Options\",\n  \"description\": \"A structured output containing three distinct LinkedIn post variations designed to drive multi-platform growth (LinkedIn, YouTube, Skool).\",\n  \"type\": \"object\",\n  \"required\": [\n    \"post_options\"\n  ],\n  \"properties\": {\n    \"post_options\": {\n      \"description\": \"An array containing the three generated LinkedIn post objects.\",\n      \"type\": \"array\",\n      \"minItems\": 3,\n      \"maxItems\": 3,\n      \"items\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"analysis\",\n          \"post_text\"\n        ],\n        \"properties\": {\n          \"analysis\": {\n            \"description\": \"A brief explanation of which LinkedIn example structure was applied to generate this post.\",\n            \"type\": \"string\"\n          },\n          \"post_text\": {\n            \"description\": \"The full, ready-to-post text of the LinkedIn post, including necessary line breaks for readability.\",\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}",
        "autoFix": true
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        688,
        1104
      ],
      "id": "5ddf435b-2b41-411e-b40c-63bbf59a682a",
      "name": "linked_in_parser"
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C08KC39K8DR",
          "mode": "list",
          "cachedResultName": "ai-tools-content"
        },
        "text": "=*LinkedIn Repurposing | <{{ $('set_youtube_details').item.json.url }}|{{ $('set_youtube_details').item.json.title }}>*",
        "otherOptions": {
          "includeLinkToWorkflow": false,
          "unfurl_links": false,
          "unfurl_media": false
        }
      },
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.3,
      "position": [
        1008,
        880
      ],
      "id": "83dcea20-f111-4a70-8283-9f6432a124f0",
      "name": "send_initial_linked_in_msg",
      "webhookId": "da680568-43ab-4b52-a9de-b92f2c64191b"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e22eb46f-ddaa-4ef6-836e-84b975aec40f",
              "name": "options",
              "value": "={{ $('write_linked_in_posts').item.json.output.post_options }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1280,
        880
      ],
      "id": "95cf5d43-693b-4f36-a6ff-cdea89cfc53b",
      "name": "set_linked_in_options"
    },
    {
      "parameters": {
        "fieldToSplitOut": "options",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        1568,
        880
      ],
      "id": "01b5b674-93c0-480c-8818-df7ac1b70ebc",
      "name": "split_linked_in_options"
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C08KC39K8DR",
          "mode": "list",
          "cachedResultName": "ai-tools-content"
        },
        "text": "={{ `*Post Option #${$itemIndex + 1}*` }}\n\n```\n{{ $json.post_text }}\n```",
        "otherOptions": {
          "includeLinkToWorkflow": false,
          "thread_ts": {
            "replyValues": {
              "thread_ts": "={{ $('send_initial_linked_in_msg').item.json.message.ts }}"
            }
          },
          "unfurl_links": false,
          "unfurl_media": false
        }
      },
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.3,
      "position": [
        1840,
        880
      ],
      "id": "31a66e00-0221-4942-bbec-ce435efb5124",
      "name": "send_linked_in_post_msg",
      "webhookId": "94d359c4-d735-4a53-9690-575279090f58"
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C08KC39K8DR",
          "mode": "list",
          "cachedResultName": "ai-tools-content"
        },
        "text": "=*Twitter Repurposing | <{{ $('set_youtube_details').item.json.url }}|{{ $('set_youtube_details').item.json.title }}>*  ",
        "otherOptions": {
          "includeLinkToWorkflow": false,
          "unfurl_links": false,
          "unfurl_media": false
        }
      },
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.3,
      "position": [
        1008,
        224
      ],
      "id": "92679e80-adbe-4af6-8568-f3f403191234",
      "name": "send_initial_tweets_msg",
      "webhookId": "93918daa-914d-4b13-a70b-85e648d31fce"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e22eb46f-ddaa-4ef6-836e-84b975aec40f",
              "name": "options",
              "value": "={{ $('write_tweets').item.json.output.tweet_options }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1280,
        224
      ],
      "id": "66f0e325-51c9-48ac-98f6-1c615131a6d2",
      "name": "set_twitter_options"
    },
    {
      "parameters": {
        "fieldToSplitOut": "options",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        1568,
        224
      ],
      "id": "e6ab20bd-db5d-4fe2-8fd4-9b328bcb9c70",
      "name": "split_tweet_options"
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C08KC39K8DR",
          "mode": "list",
          "cachedResultName": "ai-tools-content"
        },
        "text": "={{ `*Tweet Option #${$itemIndex + 1}*` }}\n\n```\n{{ $json.tweet_text }}\n```",
        "otherOptions": {
          "includeLinkToWorkflow": false,
          "thread_ts": {
            "replyValues": {
              "thread_ts": "={{ $('send_initial_tweets_msg').item.json.message.ts }}"
            }
          },
          "unfurl_links": false,
          "unfurl_media": false
        }
      },
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.3,
      "position": [
        1840,
        224
      ],
      "id": "52cc01c4-a8a1-48e5-8940-cda0a541f374",
      "name": "send_tweet_msg",
      "webhookId": "af12de4c-83d3-4684-9134-61dabb27a23c"
    },
    {
      "parameters": {
        "content": "## 1. Scrape YouTube Video\n\n- Uses `streamers~youtube-scraper` Apify actor to scrape the full transcript and metadata from the given YouTube video url\n- Add an Apify header auth credential to use this node",
        "height": 540,
        "width": 800,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -944,
        352
      ],
      "typeVersion": 1,
      "id": "27e5bdd5-21db-445d-b739-7a6ff6973c4d",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## 2. Repurpose YouTube Video Into Twitter Post\n\n- Takes the YouTube script as input\n- Takes the specified \"example\" Twitter posts as input to model what we want our output to look like\n- Makes an LLM call to generate two post examples\n- Shares the results in a Slack message",
        "height": 620,
        "width": 2080,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        0
      ],
      "typeVersion": 1,
      "id": "5ad56119-e824-46ef-930b-c34bad816acb",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## 3. Repurpose YouTube Video Into LinkedIn Post\n\n- Takes the YouTube script as input\n- Takes the specified \"example\" LinkedIn posts as input to model what we want our output to look like\n- Makes an LLM call to generate two post examples\n- Shares the results in a Slack message",
        "height": 620,
        "width": 2080,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        640
      ],
      "typeVersion": 1,
      "id": "e20a2713-afe2-4848-8183-0b9003ac373d",
      "name": "Sticky Note2"
    }
  ],
  "pinData": {},
  "repo_name": "dt-n8n-workflow-backups",
  "repo_owner": "devenkhatri",
  "repo_path": "",
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-09-30T19:20:41.244Z",
      "updatedAt": "2025-09-30T19:20:41.244Z",
      "role": "workflow:owner",
      "workflowId": "0qwJJdPrjNqWLSFJ",
      "projectId": "aWyvbmsnIGDehq9r"
    }
  ],
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-09-30T19:20:41.000Z",
  "versionId": "9f133caf-6357-4a7b-8be6-b61784043db9"
}